// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: snake.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
using grpc = global::Grpc.Core;
using System.Threading.Tasks;

namespace SnakeRL.Grpc {
  public static partial class Snake
  {
    static readonly string __ServiceName = "snake.Snake";

    static readonly grpc::Marshaller<global::SnakeRL.Grpc.StepRequest> __Marshaller_snake_StepRequest =
        grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg),
                                 global::SnakeRL.Grpc.StepRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SnakeRL.Grpc.StepResponse> __Marshaller_snake_StepResponse =
        grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg),
                                 global::SnakeRL.Grpc.StepResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SnakeRL.Grpc.ResetRequest> __Marshaller_snake_ResetRequest =
        grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg),
                                 global::SnakeRL.Grpc.ResetRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SnakeRL.Grpc.ResetResponse> __Marshaller_snake_ResetResponse =
        grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg),
                                 global::SnakeRL.Grpc.ResetResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::SnakeRL.Grpc.StepRequest, global::SnakeRL.Grpc.StepResponse> __Method_Step =
        new grpc::Method<global::SnakeRL.Grpc.StepRequest, global::SnakeRL.Grpc.StepResponse>(
            grpc::MethodType.Unary,
            __ServiceName,
            "Step",
            __Marshaller_snake_StepRequest,
            __Marshaller_snake_StepResponse);

    static readonly grpc::Method<global::SnakeRL.Grpc.ResetRequest, global::SnakeRL.Grpc.ResetResponse> __Method_Reset =
        new grpc::Method<global::SnakeRL.Grpc.ResetRequest, global::SnakeRL.Grpc.ResetResponse>(
            grpc::MethodType.Unary,
            __ServiceName,
            "Reset",
            __Marshaller_snake_ResetRequest,
            __Marshaller_snake_ResetResponse);

    public partial class SnakeClient : grpc::ClientBase<SnakeClient>
    {
        public SnakeClient(grpc::ChannelBase channel) : base(channel) { }
        public SnakeClient(grpc::CallInvoker callInvoker) : base(callInvoker) { }
        protected SnakeClient() : base() { }
        protected SnakeClient(ClientBaseConfiguration configuration) : base(configuration) { }

        public virtual global::SnakeRL.Grpc.StepResponse Step(global::SnakeRL.Grpc.StepRequest request, grpc::CallOptions options = default)
        {
            return CallInvoker.BlockingUnaryCall(__Method_Step, null, options, request);
        }

        public virtual async Task<global::SnakeRL.Grpc.StepResponse> StepAsync(global::SnakeRL.Grpc.StepRequest request, grpc::CallOptions options = default)
        {
            return await CallInvoker.AsyncUnaryCall(__Method_Step, null, options, request);
        }

        public virtual global::SnakeRL.Grpc.ResetResponse Reset(global::SnakeRL.Grpc.ResetRequest request, grpc::CallOptions options = default)
        {
            return CallInvoker.BlockingUnaryCall(__Method_Reset, null, options, request);
        }

        public virtual async Task<global::SnakeRL.Grpc.ResetResponse> ResetAsync(global::SnakeRL.Grpc.ResetRequest request, grpc::CallOptions options = default)
        {
            return await CallInvoker.AsyncUnaryCall(__Method_Reset, null, options, request);
        }

        protected override SnakeClient NewInstance(ClientBaseConfiguration configuration)
        {
            return new SnakeClient(configuration);
        }
    }

    public abstract partial class SnakeBase
    {
        public virtual Task<global::SnakeRL.Grpc.StepResponse> Step(global::SnakeRL.Grpc.StepRequest request, grpc::ServerCallContext context)
        {
            throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
        }

        public virtual Task<global::SnakeRL.Grpc.ResetResponse> Reset(global::SnakeRL.Grpc.ResetRequest request, grpc::ServerCallContext context)
        {
            throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
        }
    }

    public static grpc::ServerServiceDefinition BindService(SnakeBase serviceImpl)
    {
        return grpc::ServerServiceDefinition.CreateBuilder()
            .AddMethod(__Method_Step, serviceImpl.Step)
            .AddMethod(__Method_Reset, serviceImpl.Reset)
            .Build();
    }

    public static void BindService(grpc::ServiceBinderBase serviceBinder, SnakeBase serviceImpl)
    {
        serviceBinder.AddMethod(__Method_Step, serviceImpl.Step);
        serviceBinder.AddMethod(__Method_Reset, serviceImpl.Reset);
    }
  }
}
